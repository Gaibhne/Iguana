ext {
	unicornVersion = "2.6.1"
}

repositories {
	mavenLocal()
	mavenCentral()
	jcenter()
	maven {
		url "https://oss.sonatype.org/content/repositories/snapshots/"
	}
	maven {
		url "https://oss.sonatype.org/content/repositories/releases/"
	}
	maven {
		url "https://jitpack.io"
	}
	google()
}

buildscript {
	repositories {
		mavenLocal()
		mavenCentral()
		jcenter()
		maven {
			url "https://oss.sonatype.org/content/repositories/snapshots/"
		}
		maven {
			url "https://oss.sonatype.org/content/repositories/releases/"
		}
		maven {
			url "https://jitpack.io"
		}
		google()
	}
	dependencies {
		classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.4'
	}
}

apply plugin: "com.github.johnrengelman.shadow"
apply plugin: "java"

dependencies {
	compile "com.google.code.findbugs:jsr305:3.0.2"
	compile "org.projectlombok:lombok:1.18.2"

	compile "com.github.Shockah:Jay:1.3"
	//compile "com.github.Shockah.Unicorn:func:$unicornVersion"

	compile ("net.dv8tion:JDA:3.7.1_422") {
		exclude module: "opus-java"
	}
	compile "org.pircbotx:pircbotx:2.1"
}

targetCompatibility = '1.8'
sourceCompatibility = '1.8'

sourceSets.main {
	java.srcDirs = ["src"]
	resources.srcDirs = ["assets"]
}

project.ext.mainClassName = "pl.shockah.iguana.Iguana"
project.ext.assetsDir = new File("assets")

jar {
	manifest {
		attributes 'Main-Class': project.mainClassName
	}
}

task run(dependsOn: project.tasks.classes, type: JavaExec) {
	main = project.mainClassName
	classpath = sourceSets.main.runtimeClasspath
	standardInput = System.in
	workingDir = project.projectDir
	ignoreExitValue = true

	if (System.getProperty('DEBUG', 'false') == 'true') {
		jvmArgs '-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005'
		debug true
	}
	if (System.getProperty('PROFILE', 'false') == 'true') {
		def properties = new Properties()
		properties.load(project.rootProject.file("local.properties").newDataInputStream())
		jvmArgs properties.getProperty("profiler-arg")
	}
}